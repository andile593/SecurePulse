// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Client {
  id           String   @id @default(uuid())
  name         String
  contactEmail String
  phone        String?
  createdAt    DateTime @default(now())

  sites Site[]
}

model Site {
  id        String   @id @default(uuid())
  name      String
  address   String
  latitude  Float?
  longitude Float?
  createdAt DateTime @default(now())

  clientId String
  client   Client @relation(fields: [clientId], references: [id])

  alarms Alarm[]
  obLogs ObLog[] // ← ADD THIS LINE
}

model Alarm {
  id          String   @id @default(uuid())
  triggeredAt DateTime
  alarmType   String
  priority    Int
  status      String

  siteId String
  site   Site   @relation(fields: [siteId], references: [id])

  aiCall   AiCall?
  dispatch Dispatch?
  obLogs   ObLog[]
}

model AiCall {
  id              String   @id @default(uuid())
  aiDecision      String
  confidenceScore Float
  evaluatedAt     DateTime
  notes           String?

  alarmId String @unique
  alarm   Alarm  @relation(fields: [alarmId], references: [id])
}

model Dispatch {
  id            String    @id @default(uuid())
  dispatchedAt  DateTime
  arrivalTime   DateTime?
  resolvedAt    DateTime?
  responseNotes String?

  alarmId String @unique
  alarm   Alarm  @relation(fields: [alarmId], references: [id])

  guardId String?
  guard   Guard?  @relation(fields: [guardId], references: [id])

  vehicleId String?
  vehicle   Vehicle? @relation(fields: [vehicleId], references: [id])
}

model ObLog {
  id      String   @id @default(uuid())
  logTime DateTime
  message String
  source  String // e.g., "system", "guard", "ai"

  alarmId String? // Optional
  alarm   Alarm?  @relation(fields: [alarmId], references: [id])

  siteId String?
  site   Site?   @relation(fields: [siteId], references: [id])

  guardId String?
  guard   Guard?  @relation(fields: [guardId], references: [id])
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  name         String
  createdAt    DateTime  @default(now())
  lastLogin    DateTime?

  roleId String
  role   UserRole @relation(fields: [roleId], references: [id])
}

model UserRole {
  id    String @id @default(uuid())
  name  String @unique // e.g., "admin", "controller", "supervisor"
  users User[]
}

model Vehicle {
  id          String  @id @default(uuid())
  plateNumber String  @unique
  description String?
  status      String // e.g., "active", "maintenance", "out_of_service"

  dispatches Dispatch[]
  guards     Guard[]
}

model Guard {
  id     String @id @default(uuid())
  name   String
  phone  String
  status String

  assignedVehicleId String?
  assignedVehicle   Vehicle? @relation(fields: [assignedVehicleId], references: [id])

  dispatches Dispatch[]
  obLogs     ObLog[] // ← ADD THIS LINE
}
